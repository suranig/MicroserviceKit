<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>microkit</ToolCommandName>
    <PackageId>MicroserviceKit</PackageId>
    <Version>0.4.0</Version>
    <Authors>Paweł Pilichowski</Authors>
    <Description>🚀 Complete toolkit for generating production-ready .NET 8 microservices with DDD, CQRS, Clean Architecture, Event-Driven Architecture, and comprehensive infrastructure. Generate enterprise-grade microservices with REST APIs, CQRS, MongoDB read models, RabbitMQ messaging, external service integration, Docker, and complete testing suite.</Description>
    <PackageTags>microservices;toolkit;generator;ddd;cqrs;dotnet;clean-architecture;rest-api;event-driven;mongodb;rabbitmq;docker;enterprise;microkit</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/suranig/microservice-net8-ddd</PackageProjectUrl>
    <RepositoryUrl>https://github.com/suranig/microservice-net8-ddd</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageReleaseNotes>
🎉 Release 0.4.0 - Template Engine Stabilization &amp; Docker Support!

✅ CRITICAL FIXES:
- 🛠️ Fixed Template Engine path resolution issues causing files generated outside src/
- 📁 Resolved directory structure problems - all files now properly placed in src/ and tests/
- 🏷️ Fixed hardcoded 'Order' aggregate names - now parametrized based on service name
- 🔧 Standardized all template modules to use consistent path generation patterns

✅ NEW FEATURES:
- 🐳 Complete Docker support with Dockerfile, docker-compose.yml, and Makefile generation
- 📦 Added PostgreSQL, Redis, RabbitMQ services in docker-compose
- 🔄 Comprehensive Makefile with build, test, docker, and migration commands
- 🚀 Production-ready multi-stage Dockerfile for .NET 8

✅ MODULE IMPROVEMENTS:
- 📡 Switched from Wolverine to MassTransit for better enterprise messaging stability
- 🧪 Enhanced ApplicationModule with proper CQRS command/query generation
- 📋 Fixed ReadModelsModule and ExternalServicesModule path generation
- 🧩 Improved UnitTestModule and IntegrationTestModule file placement

✅ CODE GENERATION:
- 🏗️ Fixed parameter generation to use PascalCase properties
- 📝 Improved validation rules and entity construction logic
- 🔗 Enhanced project references and dependency management
- 📊 Better string interpolation handling in generated code

🚀 PRODUCTION READY: Generate fully containerized microservices with clean architecture and proper file organization!
    </PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Core\TemplateEngine\TemplateEngine.csproj" />
    <ProjectReference Include="..\..\Modules\DDD\DDD.csproj" />
    <ProjectReference Include="..\..\Modules\Application\Application.csproj" />
    <ProjectReference Include="..\..\Modules\Infrastructure\Infrastructure.csproj" />
    <ProjectReference Include="..\..\Modules\Api\Api.csproj" />
    <ProjectReference Include="..\..\Modules\ExternalServices\ExternalServices.csproj" />
    <ProjectReference Include="..\..\Modules\Messaging\Messaging.csproj" />
    <ProjectReference Include="..\..\Modules\ReadModels\ReadModels.csproj" />
    <ProjectReference Include="..\..\Modules\Tests\Tests.csproj" />
    <ProjectReference Include="..\..\Modules\Deployment\Deployment.csproj" />
    <ProjectReference Include="..\..\Modules\Docker\Docker.csproj" />
  </ItemGroup>

</Project> 