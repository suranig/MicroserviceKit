<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>microkit</ToolCommandName>
    <PackageId>MicroserviceKit</PackageId>
    <Version>0.4.2</Version>
    <Authors>Paweł Pilichowski</Authors>
    <Description>🚀 Complete toolkit for generating production-ready .NET 8 microservices with DDD, CQRS, Clean Architecture, Event-Driven Architecture, and comprehensive infrastructure. Generate enterprise-grade microservices with REST APIs, CQRS, MongoDB read models, RabbitMQ messaging, external service integration, Docker, and complete testing suite.</Description>
    <PackageTags>microservices;toolkit;generator;ddd;cqrs;dotnet;clean-architecture;rest-api;event-driven;mongodb;rabbitmq;docker;enterprise;microkit</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/suranig/microservice-net8-ddd</PackageProjectUrl>
    <RepositoryUrl>https://github.com/suranig/microservice-net8-ddd</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageReleaseNotes>
🎉 Release 0.4.2 - Docker &amp; Makefile Generation Fixed!

🐳 DOCKER SUPPORT FULLY WORKING:
- ✅ Fixed DockerModule configuration structure to match JSON templates
- ✅ All enterprise templates now generate Dockerfile, docker-compose.yml, and Makefile
- ✅ Added DockerConfiguration and KubernetesConfiguration classes
- ✅ Fixed deployment configuration parsing for nested Docker settings
- ✅ Templates generate 64 files instead of 61 (added 3 Docker files)

🏗️ ENTERPRISE TEMPLATES ENHANCED:
- ✅ cqrs-event-sourcing: Full Docker support with multi-stage builds
- ✅ bpc-workflow: Complete containerization with PostgreSQL, Redis, RabbitMQ
- ✅ read-model: Docker Compose with all required services
- ✅ event-store: Production-ready Docker configuration

📋 MAKEFILE GENERATION:
- ✅ Complete Makefile with build, run, test, docker-build, docker-run commands
- ✅ Database migration commands (migrate, migration)
- ✅ Development environment setup (dev-setup, dev-stop)
- ✅ Docker container management (docker-logs, docker-stop)

🚀 PRODUCTION READY: Full Docker &amp; Makefile support for all enterprise microservices!
    </PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Core\TemplateEngine\TemplateEngine.csproj" />
    <ProjectReference Include="..\..\Modules\DDD\DDD.csproj" />
    <ProjectReference Include="..\..\Modules\Application\Application.csproj" />
    <ProjectReference Include="..\..\Modules\Infrastructure\Infrastructure.csproj" />
    <ProjectReference Include="..\..\Modules\Api\Api.csproj" />
    <ProjectReference Include="..\..\Modules\ExternalServices\ExternalServices.csproj" />
    <ProjectReference Include="..\..\Modules\Messaging\Messaging.csproj" />
    <ProjectReference Include="..\..\Modules\ReadModels\ReadModels.csproj" />
    <ProjectReference Include="..\..\Modules\Tests\Tests.csproj" />
    <ProjectReference Include="..\..\Modules\Deployment\Deployment.csproj" />
    <ProjectReference Include="..\..\Modules\Docker\Docker.csproj" />
  </ItemGroup>

</Project> 