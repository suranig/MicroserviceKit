version: '3.8'

services:
  testservice-api:
    build:
      context: ..
      dockerfile: deployment/docker/Dockerfile
      args:
        - VERSION=${VERSION:-1.0.0}
    image: testservice:${VERSION:-1.0.0}
    container_name: testservice-api
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Data Source=:memory:
      - SERVICE_VERSION=${VERSION:-1.0.0}
    depends_on:
      - inmemory
    networks:
      - testservice-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Using in-memory database - no external database service needed





  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: testservice-redis
    ports:
      - "6379:6379"
    networks:
      - testservice-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

networks:
  testservice-network:
    driver: bridge

volumes:
  inmemory-data:
  redis-data: